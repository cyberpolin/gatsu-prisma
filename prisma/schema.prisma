datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String     @id @default(uuid())
  username   String     @unique
  email      String     @unique
  password   String
  verified   Boolean    @default(false)
  createdAt  DateTime   @default(now())
  developer  Developer? // 1:1 relation to Developer (optional because not every user is a developer)
  isAdmin    Boolean    @default(false)
}

model Developer {
  id          String     @id @default(uuid())
  userId      String     @unique  @default(uuid())   // 1:1 relation to User
  user        User       @relation(fields: [userId], references: [id])
  name        String     
  lastName    String     
  bio         String?    // Optional developer bio
  skills    Skill[]  // Many-to-many relation to TechTag
  createdAt   DateTime   @default(now())
}

model Skill {
  id          String     @id @default(uuid())
  name        String     @unique  
  developers  Developer[] // Many-to-many relation to Developer
  createdAt   DateTime   @default(now())
}

model Client {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  entry     Entry[]
  isDeleted Boolean    @default(false)
  projects Project[]
}

model Project{
  id        String    @id @default(uuid())
  name      String
  description String?
  isDeleted Boolean   @default(false)
  client    Client?   @relation(fields:[clientId], references:[id])
  clientId  String?
  entries   Entry[]
}

model Entry {
  id        String    @id @default(uuid())
  task      String
  hours     Float
  date      DateTime  @default(now())
  notes     String?
  isDeleted Boolean   @default(false)
  client    Client?   @relation(fields:[clientId], references:[id])
  clientId  String?    
  project   Project   @relation(fields:[projectId], references:[id])
  projectId String
}
